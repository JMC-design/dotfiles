--- dwm.c
+++ dwm.c
@@ -131,6 +131,7 @@
 	int nmaster;
 	int num;
 	int by;               /* bar geometry */
+	int bby;	      /* bottom bar geometry */
 	int mx, my, mw, mh;   /* screen size */
 	int wx, wy, ww, wh;   /* window area  */
 	unsigned int seltags;
@@ -138,11 +139,14 @@
 	unsigned int tagset[2];
 	Bool showbar;
 	Bool topbar;
+	Bool showbottombar;
+	Bool bottombar;
 	Client *clients;
 	Client *sel;
 	Client *stack;
 	Monitor *next;
 	Window barwin;
+	Window bbarwin;
 	const Layout *lt[2];
 };
 
@@ -517,6 +523,8 @@
 	}
 	XUnmapWindow(dpy, mon->barwin);
 	XDestroyWindow(dpy, mon->barwin);
+	XUnmapWindow(dpy, mon->bbarwin);
+	XDestroyWindow(dpy, mon->bbarwin);
 	free(mon);
 }
 
@@ -587,8 +595,10 @@
 				XFreePixmap(dpy, dc.drawable);
 			dc.drawable = XCreatePixmap(dpy, root, sw, bh, DefaultDepth(dpy, screen));
 			updatebars();
-			for(m = mons; m; m = m->next)
+			for(m = mons; m; m = m->next) {
 				XMoveResizeWindow(dpy, m->barwin, m->wx, m->by, m->ww, bh);
+				XMoveResizeWindow(dpy, m->bbarwin, m->wx, m->bby, m->ww, bh);
+			}
 			focus(NULL);
 			arrange(NULL);
 		}
@@ -659,6 +669,8 @@
 	m->nmaster = nmaster;
 	m->showbar = showbar;
 	m->topbar = topbar;
+	m->bottombar = bottombar;
+	m->showbottombar = bottombar ? True : False;
 	m->lt[0] = &layouts[0];
 	m->lt[1] = &layouts[1 % LENGTH(layouts)];
 	strncpy(m->ltsymbol, layouts[0].symbol, sizeof m->ltsymbol);
@@ -757,6 +769,15 @@
 			drawtext(NULL, dc.norm, False);
 	}
 	XCopyArea(dpy, dc.drawable, m->barwin, dc.gc, 0, 0, m->ww, bh, 0, 0);
+	if(m->showbottombar) {
+		dc.x = 0;
+		dc.w = TEXTW(btext);
+		drawtext(btext, dc.norm, False);
+		dc.x += dc.w;
+		dc.w = m->ww - dc.x;
+		drawtext(NULL, dc.norm, False);
+		XCopyArea(dpy, dc.drawable, m->bbarwin, dc.gc, 0, 0, m->ww, bh, 0, 0);
+	}
 	XSync(dpy, False);
 }
 
@@ -1858,6 +1887,13 @@
 		                          CWOverrideRedirect|CWBackPixmap|CWEventMask, &wa);
 		XDefineCursor(dpy, m->barwin, cursor[CurNormal]);
 		XMapRaised(dpy, m->barwin);
+		if (m->bottombar) {
+			m->bbarwin = XCreateWindow(dpy, root, m->wx, m->bby, m->ww, bh, 0, DefaultDepth(dpy, screen),
+						   CopyFromParent, DefaultVisual(dpy, screen),
+						   CWOverrideRedirect|CWBackPixmap|CWEventMask, &wa);
+			XDefineCursor(dpy, m->bbarwin, cursor[CurNormal]);
+			XMapRaised(dpy, m->bbarwin);
+		}
 	}
 }
 
@@ -1872,6 +1908,12 @@
 	}
 	else
 		m->by = -bh;
+	if (m->showbottombar) {
+		m->wh -= bh;
+		m->bby = m->wy + m->wh;
+	}
+	else
+		m->bby = -bh;
 }
 
 void
@@ -2044,8 +2086,39 @@
 
 void
 updatestatus(void) {
-	if(!gettextprop(root, XA_WM_NAME, stext, sizeof(stext)))
+	char buftext[512];
+	if(!gettextprop(root, XA_WM_NAME, buftext, sizeof(buftext)))
 		strcpy(stext, "dwm-"VERSION);
+	else {
+		char* blocation = strstr(buftext,"BOTTOM=");
+		if (blocation != NULL) {
+			int c = 0;
+			for (char* i = buftext; i < blocation; i++) {
+				if (c < sizeof(stext) - 1)
+					stext[c] = *i;
+				else
+					break;
+				c++;
+			}
+			stext[c] = '\0';
+			blocation += 7;
+			c = 0;
+			for (char* i = blocation; i < (blocation + sizeof(buftext)); i++)
+			{
+				if (c < sizeof(btext) - 1)
+					btext[c] = *i;
+				else
+					break;
+				c++;
+			}
+			btext[c] = '\0';
+		}
+		else {
+			for (int i = 0; i < sizeof(stext); i++)
+			stext[i] = buftext[i];
+			stext[sizeof(stext) - 1] = '\0';
+		}
+	}
 	drawbar(selmon);
 }
 
